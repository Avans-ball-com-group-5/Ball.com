services:
    ordersql:
        container_name: ordersql
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            SA_PASSWORD: Your_password123
            ACCEPT_EULA: "Y"
        ports:
            - "1435:1433"

    logisticssql:
        container_name: logisticssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            SA_PASSWORD: Your_password123
            ACCEPT_EULA: "Y"
        ports:
            - "1436:1433"

    customersql:
        container_name: customersql
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            SA_PASSWORD: Your_password123
            ACCEPT_EULA: "Y"
        ports:
            - "1437:1433"

    productsql:
        container_name: productsql
        image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
            SA_PASSWORD: Your_password123
            ACCEPT_EULA: "Y"
        ports:
            - "1438:1433"

    rabbitmq:
        container_name: rabbitmq
        image: masstransit/rabbitmq
        ports:
            - "15672:15672" # RabbitMQ Management Console
            - "5672:5672" # RabbitMQ Server

    paymentservice:
        build:
            context: ./PaymentService
            dockerfile: PaymentServiceApi/Dockerfile
        container_name: paymentserviceapi
        ports:
            - "5001:80"
        depends_on:
            - rabbitmq
        environment:
            - RabbitMQ__HostName=rabbitmq

    orderservice:
        build:
            context: ./OrderService
            dockerfile: OrderServiceApi/Dockerfile
        container_name: orderservice
        ports:
            - "5002:80"
        depends_on:
            - ordersql
            - rabbitmq
        environment:
            - ConnectionStrings__OrderDbContext=Server=ordersql,1433;Database=OrderDB;User=sa;Password=Your_password123;TrustServerCertificate=True
            - RabbitMQ__HostName=rabbitmq

    logisticsservice:
        build:
            context: ./LogisticsService
            dockerfile: LogisticsServiceApi/Dockerfile
        container_name: logisticsservice
        ports:
            - "5003:80"
        depends_on:
            - rabbitmq
            - logisticssql
        environment:
            - ConnectionStrings__LogisticsDbContext=Server=logisticssql,1433;Database=LogisticsDB;User=sa;Password=Your_password123;TrustServerCertificate=True
            - RabbitMQ__HostName=rabbitmq

    customerservice:
        build:
            context: ./CustomerService
            dockerfile: CustomerServiceApi/Dockerfile
        container_name: customerserviceapi
        ports:
            - "5004:80"
        depends_on:
            - rabbitmq
            - customersql
        environment:
            - ConnectionStrings__CustomerDbContext=Server=customersql,1433;Database=CustomerDB;User=sa;Password=Your_password123;TrustServerCertificate=True
            - RabbitMQ__HostName=rabbitmq

    productservice:
        build:
            context: ./ProductService
            dockerfile: ProductService/Dockerfile
        container_name: productservice
        ports:
            - "5005:80"
        depends_on:
            - rabbitmq
        environment:
            - ConnectionStrings__ProductDbContext=Server=productsql,1433;Database=ProductDb;User=sa;Password=Your_password123;TrustServerCertificate=True
            - RabbitMQ__HostName=rabbitmq
