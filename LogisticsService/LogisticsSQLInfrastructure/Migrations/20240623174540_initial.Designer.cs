// <auto-generated />
using System;
using LogisticsSQLInfrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticsSQLInfrastructure.Migrations
{
    [DbContext(typeof(LogisticsDbContext))]
    [Migration("20240623174540_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogisticsDomain.Models.LogisticsCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogisticsCompanies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("926e1b92-9755-41ce-a6ac-4c0e87f1c590"),
                            Location = "Breda",
                            Name = "MailNL",
                            PricePerKm = 0.5m,
                            Website = "https://tracking.postnl.nl/track-and-trace/"
                        },
                        new
                        {
                            Id = new Guid("94e4fb8f-bc46-4dd0-901c-48dcaf84f25c"),
                            Location = "Tilburg",
                            Name = "BHL",
                            PricePerKm = 0.4m,
                            Website = "https://www.dhlexpress.nl/nl/consument/track-trace"
                        },
                        new
                        {
                            Id = new Guid("748f2655-ff04-4dbb-a0ec-2ef9c027e257"),
                            Location = "Eindhoven",
                            Name = "FredEx",
                            PricePerKm = 0.6m,
                            Website = "https://www.fedex.com/nl-nl/tracking.html"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
